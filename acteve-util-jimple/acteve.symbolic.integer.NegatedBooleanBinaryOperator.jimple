public class acteve.symbolic.integer.NegatedBooleanBinaryOperator extends acteve.symbolic.integer.BooleanBinaryOperator
{

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.NegatedBooleanBinaryOperator $r0;
        java.lang.String $r1;

        $r0 := @this: acteve.symbolic.integer.NegatedBooleanBinaryOperator;
        $r1 := @parameter0: java.lang.String;
        specialinvoke $r0.<acteve.symbolic.integer.BooleanBinaryOperator: void <init>(java.lang.String)>($r1);
        return;
    }

    public acteve.symbolic.integer.Expression apply(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression)
    {
        acteve.symbolic.integer.NegatedBooleanBinaryOperator $r0;
        acteve.symbolic.integer.Expression $r1, $r2;
        acteve.symbolic.integer.NegatedBooleanExpression $r3;

        $r0 := @this: acteve.symbolic.integer.NegatedBooleanBinaryOperator;
        $r1 := @parameter0: acteve.symbolic.integer.Expression;
        $r2 := @parameter1: acteve.symbolic.integer.Expression;
        $r3 = new acteve.symbolic.integer.NegatedBooleanExpression;
        $r2 = specialinvoke $r0.<acteve.symbolic.integer.BooleanBinaryOperator: acteve.symbolic.integer.Expression apply(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>($r1, $r2);
        specialinvoke $r3.<acteve.symbolic.integer.NegatedBooleanExpression: void <init>(acteve.symbolic.integer.Expression)>($r2);
        return $r3;
    }
}
