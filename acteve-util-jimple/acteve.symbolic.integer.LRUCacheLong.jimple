class acteve.symbolic.integer.LRUCacheLong extends java.util.LinkedHashMap
{
    private final int MAX_SIZE;
    private final acteve.symbolic.integer.LongConstant ONE;
    private final acteve.symbolic.integer.LongConstant ZERO;

    void <init>()
    {
        acteve.symbolic.integer.LRUCacheLong $r0;
        acteve.symbolic.integer.LongConstant $r1;

        $r0 := @this: acteve.symbolic.integer.LRUCacheLong;
        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();
        $r0.<acteve.symbolic.integer.LRUCacheLong: int MAX_SIZE> = 50;
        $r1 = new acteve.symbolic.integer.LongConstant;
        specialinvoke $r1.<acteve.symbolic.integer.LongConstant: void <init>(long)>(0L);
        $r0.<acteve.symbolic.integer.LRUCacheLong: acteve.symbolic.integer.LongConstant ZERO> = $r1;
        $r1 = new acteve.symbolic.integer.LongConstant;
        specialinvoke $r1.<acteve.symbolic.integer.LongConstant: void <init>(long)>(1L);
        $r0.<acteve.symbolic.integer.LRUCacheLong: acteve.symbolic.integer.LongConstant ONE> = $r1;
        return;
    }

    public acteve.symbolic.integer.LongConstant get(long)
    {
        acteve.symbolic.integer.LRUCacheLong $r0;
        long $l0;
        java.lang.Long $r1;
        byte $b2;
        acteve.symbolic.integer.LongConstant $r2;

        $r0 := @this: acteve.symbolic.integer.LRUCacheLong;
        $l0 := @parameter0: long;
        $b2 = $l0 cmp 0L;
        if $b2 != 0 goto label0;

        $r2 = $r0.<acteve.symbolic.integer.LRUCacheLong: acteve.symbolic.integer.LongConstant ZERO>;
        return $r2;

     label0:
        $b2 = $l0 cmp 1L;
        if $b2 != 0 goto label1;

        $r2 = $r0.<acteve.symbolic.integer.LRUCacheLong: acteve.symbolic.integer.LongConstant ONE>;
        return $r2;

     label1:
        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);
        $r2 = virtualinvoke $r0.<acteve.symbolic.integer.LRUCacheLong: acteve.symbolic.integer.LongConstant get(java.lang.Long)>($r1);
        return $r2;
    }

    public acteve.symbolic.integer.LongConstant get(java.lang.Long)
    {
        acteve.symbolic.integer.LRUCacheLong $r0;
        java.lang.Long $r1;
        java.lang.Object $r2;
        long $l0;
        acteve.symbolic.integer.LongConstant $r3;

        $r0 := @this: acteve.symbolic.integer.LRUCacheLong;
        $r1 := @parameter0: java.lang.Long;
        $r2 = specialinvoke $r0.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1);
        $r3 = (acteve.symbolic.integer.LongConstant) $r2;
        if $r3 != null goto label0;

        $r3 = new acteve.symbolic.integer.LongConstant;
        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();
        specialinvoke $r3.<acteve.symbolic.integer.LongConstant: void <init>(long)>($l0);
        virtualinvoke $r0.<acteve.symbolic.integer.LRUCacheLong: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

     label0:
        return $r3;
    }

    protected boolean removeEldestEntry(java.util.Map$Entry)
    {
        acteve.symbolic.integer.LRUCacheLong $r0;
        java.util.Map$Entry $r1;
        int $i0;

        $r0 := @this: acteve.symbolic.integer.LRUCacheLong;
        $r1 := @parameter0: java.util.Map$Entry;
        $i0 = virtualinvoke $r0.<acteve.symbolic.integer.LRUCacheLong: int size()>();
        if $i0 <= 50 goto label0;

        return 1;

     label0:
        return 0;
    }
}
