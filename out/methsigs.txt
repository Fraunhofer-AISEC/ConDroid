<com.example.de.fhg.aisec.concolicexample.MainActivity: void <clinit>()>
<com.example.de.fhg.aisec.concolicexample.MainActivity: void <init>()>
<com.example.de.fhg.aisec.concolicexample.MainActivity: com.example.de.fhg.aisec.concolicexample.MainActivity getInstance()>
<com.example.de.fhg.aisec.concolicexample.MainActivity: void btnPressed(android.view.View)>
<com.example.de.fhg.aisec.concolicexample.MainActivity: void doBla(android.view.View)>
<com.example.de.fhg.aisec.concolicexample.MainActivity: void doBlubb(android.view.View)>
<com.example.de.fhg.aisec.concolicexample.MainActivity: void loadDex()>
<com.example.de.fhg.aisec.concolicexample.MainActivity: void onCreate(android.os.Bundle)>
<com.example.de.fhg.aisec.concolicexample.MainActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.example.de.fhg.aisec.concolicexample.MainActivity: void testInstanceOf(android.view.View)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: void <clinit>()>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: void <init>()>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: java.lang.String[] access$0()>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: java.lang.String access$1(com.example.de.fhg.aisec.concolicexample.LoginActivity)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: java.lang.String access$2(com.example.de.fhg.aisec.concolicexample.LoginActivity)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: void access$3(com.example.de.fhg.aisec.concolicexample.LoginActivity,com.example.de.fhg.aisec.concolicexample.LoginActivity$UserLoginTask)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: void access$4(com.example.de.fhg.aisec.concolicexample.LoginActivity,boolean)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: android.widget.EditText access$5(com.example.de.fhg.aisec.concolicexample.LoginActivity)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: android.view.View access$6(com.example.de.fhg.aisec.concolicexample.LoginActivity)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: android.view.View access$7(com.example.de.fhg.aisec.concolicexample.LoginActivity)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: void showProgress(boolean)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: void attemptLogin()>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: void onCreate(android.os.Bundle)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity$1: void <init>(com.example.de.fhg.aisec.concolicexample.LoginActivity)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity$1: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity$2: void <init>(com.example.de.fhg.aisec.concolicexample.LoginActivity)>
<com.example.de.fhg.aisec.concolicexample.LoginActivity$2: void onClick(android.view.View)>
<com.giderosmobile.android.player.GiderosApplication: void <init>(java.lang.String[])>
<com.giderosmobile.android.player.GiderosApplication: int BackgroundChannelGetPosition(long)>
<com.giderosmobile.android.player.GiderosApplication: float BackgroundChannelGetVolume(long)>
<com.giderosmobile.android.player.GiderosApplication: boolean BackgroundChannelIsLooping(long)>
<com.giderosmobile.android.player.GiderosApplication: boolean BackgroundChannelIsPaused(long)>
<com.giderosmobile.android.player.GiderosApplication: boolean BackgroundChannelIsPlaying(long)>
<com.giderosmobile.android.player.GiderosApplication: void BackgroundChannelSetLooping(long,boolean)>
<com.giderosmobile.android.player.GiderosApplication: void BackgroundChannelSetPaused(long,boolean)>
<com.giderosmobile.android.player.GiderosApplication: void BackgroundChannelSetPosition(long,int)>
<com.giderosmobile.android.player.GiderosApplication: void BackgroundChannelSetVolume(long,float)>
<com.giderosmobile.android.player.GiderosApplication: void BackgroundChannelStop(long)>
<com.giderosmobile.android.player.GiderosApplication: long BackgroundMusicCreateFromFile(java.lang.String,int[])>
<com.giderosmobile.android.player.GiderosApplication: void BackgroundMusicDelete(long)>
<com.giderosmobile.android.player.GiderosApplication: int BackgroundMusicGetLength(long)>
<com.giderosmobile.android.player.GiderosApplication: long BackgroundMusicPlay(long,boolean,long)>
<com.giderosmobile.android.player.GiderosApplication: boolean canOpenUrl(java.lang.String)>
<com.giderosmobile.android.player.GiderosApplication: java.lang.Object executeMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[])>
<com.giderosmobile.android.player.GiderosApplication: java.lang.Class findClass(java.lang.String)>
<com.giderosmobile.android.player.GiderosApplication: void finishActivity()>
<com.giderosmobile.android.player.GiderosApplication: java.lang.String getAndroidVersion()>
<com.giderosmobile.android.player.GiderosApplication: void getDirectories()>
<com.giderosmobile.android.player.GiderosApplication: double getGeolocationAccuracy_s()>
<com.giderosmobile.android.player.GiderosApplication: double getGeolocationThreshold_s()>
<com.giderosmobile.android.player.GiderosApplication: com.giderosmobile.android.player.GiderosApplication getInstance()>
<com.giderosmobile.android.player.GiderosApplication: java.lang.String getLanguage()>
<com.giderosmobile.android.player.GiderosApplication: java.lang.String getLocalIPs()>
<com.giderosmobile.android.player.GiderosApplication: java.lang.String getLocale()>
<com.giderosmobile.android.player.GiderosApplication: int getScreenDensity()>
<com.giderosmobile.android.player.GiderosApplication: boolean isAccelerometerAvailable_s()>
<com.giderosmobile.android.player.GiderosApplication: boolean isGeolocationAvailable_s()>
<com.giderosmobile.android.player.GiderosApplication: boolean isGyroscopeAvailable_s()>
<com.giderosmobile.android.player.GiderosApplication: boolean isHeadingAvailable_s()>
<com.giderosmobile.android.player.GiderosApplication: void onCreate(java.lang.String[])>
<com.giderosmobile.android.player.GiderosApplication: void onDestroy()>
<com.giderosmobile.android.player.GiderosApplication: void openUrl(java.lang.String)>
<com.giderosmobile.android.player.GiderosApplication: void populateAllFiles()>
<com.giderosmobile.android.player.GiderosApplication: void setFps(int)>
<com.giderosmobile.android.player.GiderosApplication: void setGeolocationAccuracy_s(double)>
<com.giderosmobile.android.player.GiderosApplication: void setGeolocationThreshold_s(double)>
<com.giderosmobile.android.player.GiderosApplication: void setKeepAwake(boolean)>
<com.giderosmobile.android.player.GiderosApplication: void sleep(long)>
<com.giderosmobile.android.player.GiderosApplication: void startAccelerometer_s()>
<com.giderosmobile.android.player.GiderosApplication: void startGyroscope_s()>
<com.giderosmobile.android.player.GiderosApplication: void startUpdatingHeading_s()>
<com.giderosmobile.android.player.GiderosApplication: void startUpdatingLocation_s()>
<com.giderosmobile.android.player.GiderosApplication: void stopAccelerometer_s()>
<com.giderosmobile.android.player.GiderosApplication: void stopGyroscope_s()>
<com.giderosmobile.android.player.GiderosApplication: void stopUpdatingHeading_s()>
<com.giderosmobile.android.player.GiderosApplication: void stopUpdatingLocation_s()>
<com.giderosmobile.android.player.GiderosApplication: void vibrate()>
<com.giderosmobile.android.player.GiderosApplication: double getGeolocationAccuracy()>
<com.giderosmobile.android.player.GiderosApplication: double getGeolocationThreshold()>
<com.giderosmobile.android.player.GiderosApplication: boolean isAccelerometerAvailable()>
<com.giderosmobile.android.player.GiderosApplication: boolean isGeolocationAvailable()>
<com.giderosmobile.android.player.GiderosApplication: boolean isGyroscopeAvailable()>
<com.giderosmobile.android.player.GiderosApplication: boolean isHeadingAvailable()>
<com.giderosmobile.android.player.GiderosApplication: void onActivityResult(int,int,android.content.Intent)>
<com.giderosmobile.android.player.GiderosApplication: void onDrawFrame()>
<com.giderosmobile.android.player.GiderosApplication: boolean onKeyDown(int,android.view.KeyEvent)>
<com.giderosmobile.android.player.GiderosApplication: boolean onKeyUp(int,android.view.KeyEvent)>
<com.giderosmobile.android.player.GiderosApplication: void onLowMemory()>
<com.giderosmobile.android.player.GiderosApplication: void onPause()>
<com.giderosmobile.android.player.GiderosApplication: void onRestart()>
<com.giderosmobile.android.player.GiderosApplication: void onResume()>
<com.giderosmobile.android.player.GiderosApplication: void onStart()>
<com.giderosmobile.android.player.GiderosApplication: void onStop()>
<com.giderosmobile.android.player.GiderosApplication: void onSurfaceChanged(int,int)>
<com.giderosmobile.android.player.GiderosApplication: void onSurfaceCreated()>
<com.giderosmobile.android.player.GiderosApplication: void onTouchesBegin(int,int[],int[],int[],int)>
<com.giderosmobile.android.player.GiderosApplication: void onTouchesCancel(int,int[],int[],int[])>
<com.giderosmobile.android.player.GiderosApplication: void onTouchesEnd(int,int[],int[],int[],int)>
<com.giderosmobile.android.player.GiderosApplication: void onTouchesMove(int,int[],int[],int[])>
<com.giderosmobile.android.player.GiderosApplication: void setGeolocationAccuracy(double)>
<com.giderosmobile.android.player.GiderosApplication: void setGeolocationThreshold(double)>
<com.giderosmobile.android.player.GiderosApplication: void startAccelerometer()>
<com.giderosmobile.android.player.GiderosApplication: void startGyroscope()>
<com.giderosmobile.android.player.GiderosApplication: void startUpdatingHeading()>
<com.giderosmobile.android.player.GiderosApplication: void startUpdatingLocation()>
<com.giderosmobile.android.player.GiderosApplication: void stopAccelerometer()>
<com.giderosmobile.android.player.GiderosApplication: void stopGyroscope()>
<com.giderosmobile.android.player.GiderosApplication: void stopUpdatingHeading()>
<com.giderosmobile.android.player.GiderosApplication: void stopUpdatingLocation()>
<com.giderosmobile.android.HeadSoccerActivity: void <clinit>()>
<com.giderosmobile.android.HeadSoccerActivity: void <init>()>
<com.giderosmobile.android.HeadSoccerActivity: void onActivityResult(int,int,android.content.Intent)>
<com.giderosmobile.android.HeadSoccerActivity: void onCreate(android.os.Bundle)>
<com.giderosmobile.android.HeadSoccerActivity: void onDestroy()>
<com.giderosmobile.android.HeadSoccerActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.giderosmobile.android.HeadSoccerActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.giderosmobile.android.HeadSoccerActivity: void onLowMemory()>
<com.giderosmobile.android.HeadSoccerActivity: void onPause()>
<com.giderosmobile.android.HeadSoccerActivity: void onRestart()>
<com.giderosmobile.android.HeadSoccerActivity: void onResume()>
<com.giderosmobile.android.HeadSoccerActivity: void onStart()>
<com.giderosmobile.android.HeadSoccerActivity: void onStop()>
<com.giderosmobile.android.HeadSoccerActivity: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.giderosmobile.android.HeadSoccerActivity: void onWindowFocusChanged(boolean)>
<com.google.ads.AdRequest: void <clinit>()>
<com.google.ads.AdRequest: void <init>()>
<com.google.ads.AdRequest: com.google.ads.mediation.admob.AdMobAdapterExtras a()>
<com.google.ads.AdRequest: com.google.ads.AdRequest addExtra(java.lang.String,java.lang.Object)>
<com.google.ads.AdRequest: com.google.ads.AdRequest addKeyword(java.lang.String)>
<com.google.ads.AdRequest: com.google.ads.AdRequest addKeywords(java.util.Set)>
<com.google.ads.AdRequest: com.google.ads.AdRequest addMediationExtra(java.lang.String,java.lang.Object)>
<com.google.ads.AdRequest: com.google.ads.AdRequest addTestDevice(java.lang.String)>
<com.google.ads.AdRequest: com.google.ads.AdRequest clearBirthday()>
<com.google.ads.AdRequest: java.util.Date getBirthday()>
<com.google.ads.AdRequest: com.google.ads.AdRequest$Gender getGender()>
<com.google.ads.AdRequest: java.util.Set getKeywords()>
<com.google.ads.AdRequest: android.location.Location getLocation()>
<com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.AdRequest: boolean getPlusOneOptOut()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)>
<com.google.ads.AdRequest: boolean isTestDevice(android.content.Context)>
<com.google.ads.AdRequest: com.google.ads.AdRequest removeNetworkExtras(java.lang.Class)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setBirthday(java.lang.String)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setBirthday(java.util.Calendar)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setBirthday(java.util.Date)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setExtras(java.util.Map)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setGender(com.google.ads.AdRequest$Gender)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setKeywords(java.util.Set)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setLocation(android.location.Location)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setMediationExtras(java.util.Map)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setPlusOneOptOut(boolean)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setTestDevices(java.util.Set)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setTesting(boolean)>
